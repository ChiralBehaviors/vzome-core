apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
//apply plugin: 'antlr4'

group = 'com.vzome.core'
version = '0.2'

description = """vzome-core"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()

    ivy { // not really an Ivy repo, but this pattern lets us automate the bare JAR download for java3d/vecmath
        url "http://jogamp.org/deployment"
        layout "pattern", {
            artifact "[organization]/[revision]/[artifact].[ext]"
        }
    }
}


// Support for decoupled "regression" task
sourceSets {
    regression {
        java.srcDir file('src/regression/java')
    }
}


dependencies {
    compile     group: 'antlr',             name: 'antlr',             version:'2.7.7'
    compile     group: 'java3d',            name: 'vecmath',           version:'1.6.0-pre11'
    compile     group: 'org.python',        name: 'jython',            version:'2.7-b4'
    compile     group: 'javax.servlet',     name: 'servlet-api',       version:'2.5'
    compile     group: 'org.eclipse.jetty', name: 'jetty-servlet',     version:'7.6.0.v20120127'

    runtime     group: 'antlr',             name: 'antlr',             version:'2.7.7'
    runtime     group: 'org.python',        name: 'jython',            version:'2.7-b4'
    runtime     group: 'java3d',            name: 'vecmath',           version:'1.6.0-pre11'

    testCompile group: 'junit',             name: 'junit',             version:'3.8.1'
    testCompile group: 'xom',               name: 'xom',               version:'1.2.5'

//  antlr4      group: 'org.antlr',         name: 'antlr4',            version: '4.5'

    regressionCompile sourceSets.main.output
    regressionCompile configurations.testCompile
    regressionCompile sourceSets.test.output
    regressionRuntime configurations.testRuntime
}

// These tasks are used to run the vZome regression test suite
def regressionOutputDir = new File('build/test-results/regression')
task makeRegressionOutput << {
    regressionOutputDir.mkdirs()
}
task regression(type: JavaExec, dependsOn: check) {
    group = 'Verification'
    description = """\
    Run regression testing
        command-line options:
            -PregressionHome=src/regression/files     (default shown, value can be absolute or relative)
            -PregressionFile=sniff-test.vZome-files   (default shown, relative to regressionHome)
    If the regressionFile is a ".vZome-files" file, it can contain paths that are
    resolved relative to regressionHome.
    """
    def testHome = 'src/regression/files'
    if( project .hasProperty( "regressionHome" ) ){
        testHome = regressionHome
        println "testHome is $testHome"
    }
    def testFile = 'sniff-test.vZome-files'
    if( project .hasProperty( "regressionFile" ) ){
        testFile = regressionFile
        println "testFile is $testFile"
    }
    classpath = sourceSets.regression.runtimeClasspath
    main = 'com.vzome.core.regression.TestVZomeFiles'
    args( testHome, testFile, 'build/test-results/regression/TEST-output.xml' )
    jvmArgs( '-Xmx3048M' )
}
regression.dependsOn makeRegressionOutput

task zomicPP( type: JavaExec, dependsOn: build) {
    def theFile = 'src/regression/files/Zomic/yellowAxisSaddleWeb.zomic'
    if( project .hasProperty( "zomicFile" ) ){
        theFile = zomicFile
    }
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.vzome.core.zomic.program.PrintVisitor'
    args( theFile )
}

jar {
    manifest {
        attributes 'Implementation-Title': 'vzome-core',
                   'Implementation-Version': version
    }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

